FROM node:alpine as builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json before other files
# Utilise Docker cache to save re-installing dependencies if unchanged
COPY ./package*.json ./

# Install dependencies
RUN npm install

# Copy all files
COPY ./ ./

# Build app
RUN npm run build

# Expose the listening port
EXPOSE 3000

# Run container as non-root (unprivileged) user
# The node user is provided in the Node.js Alpine base image
USER node

# Run npm start script when container starts
CMD [ "npm", "start" ]


######################################################
# Base on offical NGINX Alpine image
# FROM nginx:alpine

# Remove any existing config files
# RUN rm /etc/nginx/conf.d/*

# Copy config files
# *.conf files in conf.d/ dir get included in main config
# COPY ./default.conf /etc/nginx/conf.d/
# COPY --from=builder /app/.next /usr/share/nginx/html

# Expose the listening port
# EXPOSE 80

# Launch NGINX
# CMD [ "nginx", "-g", "daemon off;" ]